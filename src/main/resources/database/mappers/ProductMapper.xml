<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.cwl.product.ProductDAO">

	<!-- SQL -->
  	<sql id="productCondition">
  		<choose>
  			<when test="condition == 'productName'">
  				WHERE PRODUCTNAME LIKE '%' || #{search} || '%'
    			ORDER BY PRODUCTNUM DESC
  			</when>
  			<when test="condition == 'nameOrder'">
  				ORDER BY PRODUCTNAME ASC
  			</when>
  			<when test="condition == 'lowPriceOrder'">
  				ORDER BY PRODUCTPRICE ASC
  			</when>
  			<when test="condition == 'highPriceOrder'">
  				ORDER BY PRODUCTPRICE DESC
  			</when>
  			<when test="condition == 'state'">
  				WHERE PRODUCTSTATE NOT IN 0
  				ORDER BY PRODUCTNUM DESC
  			</when>
  			<otherwise>
  				ORDER BY PRODUCTSTATE DESC, PRODUCTNUM DESC
  			</otherwise>
  		</choose>
	</sql>

	<!-- SELECT -->
  	<select id="getProductList" resultType="ProductDTO">
  		SELECT * FROM
			(
				SELECT ROWNUM R, C.* FROM
					(
						SELECT * FROM PRODUCT
						<include refid="productCondition"></include>
					) C
			)
		WHERE R BETWEEN #{startRow} AND #{lastRow}
  	</select>
  	
  	<select id="getProductDetail" resultMap="getProductDetailResult" parameterType="ProductDTO">
  		SELECT * FROM PRODUCT
  			LEFT OUTER JOIN
  			PRODUCTIMG
  			USING (PRODUCTNUM)
  		WHERE PRODUCTNUM = #{productNum}
  	</select>
  	
  	<resultMap type="ProductDTO" id="getProductDetailResult">
		<id column="PRODUCTNUM" property="productNum"/>
		<result column="MEMBERID" property="memberId"/>
		<result column="PRODUCTNAME" property="productName"/>
		<result column="PRODUCTDETAIL" property="productDetail"/>
		<result column="PRODUCTSTOCK" property="productStock"/>
		<result column="PRODUCTPRICE" property="productPrice"/>
		<result column="PRODUCTDATE" property="productDate"/>
		<result column="PRODUCTSTATE" property="productState"/>
		<collection property="productImgDTOs" javaType="List" ofType="productImgDTO">
  			<id column="PRODUCTIMGNUM" property="productImgNum"/>
  			<result column="IMGNAME" property="imgName"/>
  			<result column="ORIGINALNAME" property="originalName"/>
  		</collection>
	</resultMap>
	
	<select id="getProductImgList" resultType="ProductImgDTO" parameterType="ProductDTO">
		SELECT * FROM PRODUCTIMG
		WHERE PRODUCTNUM = #{productNum}
	</select>
	
	<select id="getTotalCount" resultType="Long" parameterType="Pagination">
		SELECT COUNT(PRODUCTNUM) FROM PRODUCT
		<include refid="productCondition"></include>
	</select>
	
	<!-- INSERT -->
	<insert id="setProductAdd" parameterType="ProductDTO">
		<selectKey keyProperty="productNum" resultType="Long" order="BEFORE">
			SELECT PRODUCT_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO PRODUCT
		VALUES(#{productNum}, #{memberId}, #{productName}, #{productDetail}, #{productStock}, #{productPrice}, SYSDATE, #{productState})
	</insert>
	
	<insert id="setProductImgAdd" parameterType="ProductImgDTO">
		INSERT INTO PRODUCTIMG
		VALUES (PRODUCTIMG_SEQ.NEXTVAL, #{productNum}, #{imgName}, #{originalName})
	</insert>
	
	<!-- UPDATE -->
	<update id="setProductUpdate" parameterType="ProductDTO">
		UPDATE PRODUCT SET PRODUCTNAME = #{productName}, PRODUCTDETAIL = #{productDetail}, PRODUCTSTOCK = #{productStock}, PRODUCTPRICE = #{productPrice}, PRODUCTSTATE = #{productState}
		WHERE PRODUCTNUM = #{productNum}
	</update>
	
	<!-- DELETE -->
	<delete id="setProductDelete" parameterType="ProductDTO">
		DELETE PRODUCT
		WHERE PRODUCTNUM = #{productNum}
	</delete>

	<delete id="setProductImgDelete" parameterType="Long">
		DELETE PRODUCTIMG
		WHERE IMGNUM = #{imgNum}
	</delete>

</mapper>