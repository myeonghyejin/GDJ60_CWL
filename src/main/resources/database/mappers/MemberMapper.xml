<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.cwl.member.MemberMapper">
	
	<!-- 회원가입 -->  
  	<insert id="memberAdd">
  		INSERT INTO MEMBER(MEMBERID, MEMBERPW, MEMBERNAME, MEMBERPHONE, MEMBERADDRESS1, MEMBERADDRESS2, MEMBERADDRESS3, MEMBEREMAIL, ADMINCHECK, MEMBERGENDER, MEMBERSI, MEMBERAGE, MONEY)
  		VALUES (#{memberId}, #{memberPw}, #{memberName}, #{memberPhone}, #{memberAddress1}, #{memberAddress2}, #{memberAddress3}, #{memberEmail}, 0, #{memberGender}, #{memberSI}, #{memberAge}, 100000)
  	</insert>
  	
  	<!-- 아이디 중복검사 -->
  	<select id="idCheck" resultType="int">
  		SELECT COUNT(*) FROM MEMBER WHERE MEMBERID = #{memberId}  		  	
  	</select>
  	
  	<!-- 닉네임 중복검사 -->
  	<!-- <select id="nickNameCheck" resultType="int">
  		SELECT COUNT(*) FROM MEMBER WHERE MEMBERNICKNAME = #{memberNickName}  		  	
  	</select> -->
  	
  	<!-- 로그인 -->
  	<select id="memberLogin" resultType="com.team.cwl.member.MemberDTO">
		SELECT *
		FROM MEMBER
		WHERE MEMBERID = #{memberId}
  	</select>
  	
   	<!-- 주문자 정보 -->
  	<select id="getMemberInfo" resultType="com.team.cwl.member.MemberDTO">  	
  		SELECT MEMBERID, MEMBERNAME, MEMBEREMAIL, MEMBERADDRESS1, MEMBERADDRESS2, MEMBERADDRESS3, MONEY, MEMBERSI 
  		FROM MEMBER 
  		WHERE MEMBERID = #{memberId}  	
  	</select>
  	
  	<!-- 회원 수정 -->
  	<update id="memberUpdate" parameterType="MemberDTO">
  		UPDATE MEMBER SET MEMBERPW=#{memberPw}, MEMBERAGE=#{memberAge}, MEMBERPHONE=#{memberPhone}, MEMBEREMAIL=#{memberEmail}, MEMBERADDRESS1=#{memberAddress1}, MEMBERADDRESS2=#{memberAddress2}, MEMBERADDRESS3=#{memberAddress3}, MEMBERSI=#{memberSI}
  		WHERE MEMBERID=#{memberId}
  	</update>
</mapper>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- <insert id="memberAdd" parameterType="MemberDTO">
		INSERT INTO MEMBER (MEMBERID, MEMBERPW, MEMBERNAME, MEMBERPHONE, MEMBEREMAIL, MEMBERGENDER, MEMBERSI, MEMBERAGE)
		VALUES (#{memberId}, #{memberPw}, #{memberName}, #{memberPhone}, #{memberEmail}, #{memberGender}, #{memberSI}, #{memberAge})
	</insert>
	
	<insert id="setMemberRoleAdd" parameterType="MemberDTO">
  		INSERT INTO MEMBERROLE (MEMBERID, ROLENUM)
  		VALUES (#{memberId}, (SELECT ROLENUM FROM ROLE WHERE ROLENAME='회원'))
  	</insert>
	
	<select id="setMemberLogin" parameterType="MemberDTO" resultMap="getMemberLoginResult">
		SELECT M.*, R.*
		FROM MEMBER M
			INNER JOIN
			MEMBERROLE MR
			ON (M.MEMBERID = MR.MEMBERID)
			INNER JOIN
			ROLE R
			ON (MR.ROLENUM = R.ROLENUM)
		WHERE M.MEMBERID = #{memberId}  	
	</select>
	
	<resultMap type="MemberDTO" id="getMemberLoginResult">
		<id column="MEMBERID" property="memberId"/>
		<result column="MEMBERPW" property="memberPw"/>
		<result column="MEMBERNAME" property="memberName"/>
		<result column="MEMBERPHONE" property="memberPhone"/>
		<result column="MEMBEREMAIL" property="memberEmail"/>
		<result column="MEMBERGENDER" property="memberGender"/>
		<result column="MEMBERSI" property="memberSI"/>
		<result column="MEMBERAGE" property="memberAge"/>
		<association property="roleDTO" javaType="RoleDTO">
			<id column="ROLENUM" property="roleNum"/>
			<result column="roleName" property="roleName"/>
		</association>
	</resultMap>
	
	<update id="setMemberUpdate" parameterType="MemberDTO">
		UPDATE MEMBER SET MEMBERPW=#{memberPw}, MEMBERNAME=#{memberName}, MEMBERPHONE=#{memberPhone}, MEMBEREMAIL=#{memberEmail}, MEMBERGENDER=#{memberGender}, MEMBERSI=#{memberSI}, MEMBERAGE=#{memberAge}
		WHERE MEMBERID=#{memberId}
	</update> -->